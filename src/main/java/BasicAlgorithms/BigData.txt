TopK问题

搜索引擎会通过日志文件把用户每次检索使用的所有检索串都记录下来，每个查询串的长度为1-255字节。
假设目前有一千万个记录（这些查询串的重复度比较高，虽然总数是1千万，但如果除去重复后，不超过3
百万个。一个查询串的重复度越高，说明查询它的用户越多，也就是越热门），请你统计最热门的10个查
询串，要求使用的内存不能超过1G。

题目要求：内存使用不能超过1GB, 255 * 10000000 / 1024 / 1024 = 2.37GB

针对此类典型的TOP K问题，采取的对策往往是：HashMap + 堆。如下所示：

1：先用HashMap统计出每条记录出现的次数,HashMap(QueryString, QueryStringCount),如果记录
不在HashMap中,那么就把这个记录加1,如果该字符串在HashMap中,则把值增1,最终在O(n)时间内完成了
统计, 虽然 QueryString的数目是1000万，但是QueryString是HashMap的Key，这个是唯一的，所以
最终进入HashMap的Item数量只能是300万个，题目中告诉你去重后不超过300万，也就是告诉你利用
HashMap key的唯一性来做为QueryString的存储。

2:(最热门，也就是最小堆)堆排序,借助堆这个数据结构,找出Top-K,时间复杂度为O(nlgk),维护一个大小
为k (k = 10)的的小根堆。然后遍历300万的记录,每次和小根堆的堆顶元素进行比较,如果比堆顶元素大,
则交换,然后再维护好堆。最终当遍历完300万条记录后, 小根堆里面存储的元素就是最热门的10个查询